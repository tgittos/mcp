<rule>
name: typescript-documentation
scope:
  - "**/*.ts"
description: |
  Documents best practices for code documentation in Typescript, including JSDoc, documenting public APIs, and inline comments.
recommendations:
  - Use JSDoc comments for all public functions, classes, interfaces, and types.
  - Document function parameters, return types, and thrown errors.
  - Keep comments up to date with code changes.
  - Use inline comments sparingly to explain non-obvious logic or intent.
  - Avoid redundant comments that restate what the code does.
  - Document module-level purpose and usage at the top of each file.
  - Prefer descriptive names over excessive comments.
rationale: |
  Good documentation improves code readability, maintainability, and onboarding for new contributors. JSDoc enables better tooling and type inference.
examples:
  - input: |
      function add(a: number, b: number): number {
        return a + b;
      }
    output: |
      /**
       * Adds two numbers together.
       * @param a - The first number
       * @param b - The second number
       * @returns The sum of a and b
       */
      function add(a: number, b: number): number {
        return a + b;
      }
</rule>
description:
globs:
alwaysApply: false
---
