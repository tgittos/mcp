<rule>
name: typescript-dependencies
scope:
  - "**/*.ts"
description: |
  Documents best practices for managing dependencies in Typescript projects, including use of package managers, avoiding duplicates, and keeping dependencies up to date.
recommendations:
  - Use a package manager (npm, yarn, pnpm) and commit lockfiles to version control.
  - Avoid duplicate or unnecessary dependencies; audit regularly.
  - Prefer official types (@types/*) for third-party packages.
  - Keep dependencies up to date and monitor for security advisories.
  - Use exact versions for dependencies to ensure reproducible builds.
  - Remove unused dependencies promptly.
  - Separate devDependencies from production dependencies.
  - Avoid using global packages unless necessary.
  - Document required peer dependencies in README or package.json.
rationale: |
  Good dependency management ensures project stability, security, and maintainability. Keeping dependencies up to date reduces risk and technical debt.
examples:
  - input: |
      // BAD: Using a package without types
      import foo from 'foo';
    output: |
      // GOOD: Install @types/foo and import with types
      import foo from 'foo';
      // ...
</rule>
description:
globs:
alwaysApply: false
---
